Sempre quando tiver um fundo em preto ou em outra cor, que seja diferente da cor original do fundo, e estiver pegando de ponta a ponta, terá que criar uma div para segurar os elementos, logo depois do elemento pai.
-> Setar a cor de fundo no elemento inicial, que seria o pai.

EXEMPLO:
>> em class="header-bg"
-> esse "bg" representa que sempre terá um background que pega de ponta a ponta

-> Geralmente a logo do site é um link para refresh. Portanto coloque a logo <img> dentro da tag <a href="./"></a>

-> No exemplo de colocar uma margin-bottom negativa na imagem, compreenda que essa margin é em relação ao elemento para (introdução). Tanto é que se a margin crescer, vai criar um espaço na introdução.

->  box-shadow: inset 0 -120px  white;  -- inset defini um valor interno da sombra.
-> eu defini essa prorpiedade, para a minha introducao-bg ter uma sombra interna com um valor de altura negativo, ou seja, o comportamento da sombra começará embaixo e não em cima.

-> Aumentar o valor do padding foi preciso, senão, causaria uma ilusção de ótica, parencedo que o container estava sendo cortado.

PARA ENTENDER MELHOR, COLOQUE OS VALORES:
.introducao-bg {
  background-color: #000000;
  color: #ffffff;
  box-shadow: inset 0 -120px red;
}

.introducao-conteudo {
  align-self: end;
  padding-bottom: 80px;
}

O ORIGINAL FICOU ASSIM:
.introducao-bg {
  background-color: #000000;
  color: #ffffff;
  box-shadow: inset 0 -120px #ffffff;
}

.introducao-conteudo {
  align-self: end;
  padding-bottom: 200px; -> Valor de 200, pois eu compensei o 80 para 200. Somando 120 + (altura da sombra) + 80 (que seira o padding atual) = 200
}

.introducao-bg {
  background-color: #000000;
  color: #ffffff;
  box-shadow: inset 0 -120px #ffffff;
  margin-left: -80px -> Criará uma espécie de padding, a margin funcionará internamente, arrastanto os elementos internamente. ASSISTIA O VÍDEO QUE GRAVOU NO CELULAR COMO EXEMPLO
}

-> Analisar quais são os rlementos e componentes globais, geralmente aqueles que são utilizados diversas vezes na navegação do site.


->CSS Utilitário: quando utilizo uma classe, que vem com diversas propriedades, para utilizar ao longo do site.

-> Esses CSS utilitário servirá principalmente para propriedades de tipogragia:
-font-size;
-line-height;
-font-family;
-font-weight;

-> E também para cores.


OBS.: Para melhor entendimento, começe fazendo esses CSS utilitário e colocando aos poucos em cada parte do site.
-> Variável (var) é diferente de class utilitária! A variável vocÊ pode utilizar em todo o site, a classe utilitário vocÊ tem que criá-la e atribuir no elemento HTML.

-> Analisar o padrão do site!!!


CONTAINER
.container{
    max-width: 1200px; -> Valor máximo pré setado para o container. Significa que ele irá crescer no máximo até 1160px, acima disso, não cresce mais.
    margin: 0 auto; -> Faz com que o container fique centralizado
    box-sizing: border-box; -> Faz com que o pedding não some o tamanho total
}
------------------------------------------------------------------------------------
IMAGEM - na .introducao-imagem & .tecnologia-imagem
.tecnologia-imagem img {
  width: 100%; /* */
  height: 100%; /*Forçamos esse height 100% para pegar a altura máxima do elemento pai*/
  object-fit: cover; /*Para que não fique desproporcional*/
  object-position: left;
}

Por que do Width: 100%? 
- No SAFARI não estava respeitando o width. Nisso a imagem quebrava em relação a grid e pegava 100% de altura da página inteira.


Obs.: A imagem é grande, portanto ela irá crescer (isso é normal). Caso desejamos que ela seja igualmente o tamanho do contéudo, teria que estar dentro de uma div e usar como background. <img/> crescer mesmo
-----------------------------------------------------------------------------------

-> Sempre lembrar de configurações globais, aquelas que são gerais para o site ou diretamente em uma determinada teg. Exemplo: tirar padding, margin, text-decoration, etc.

-> SEMPRE LEMBRAR QUE OS ELEMENTOS CRESCEM IFINITAMENTE, SENÃO TIVER UM MAX-WIDTH


-> Em um lista, seja UL ou OL, posso definir uma font ou cor diretamente na UL (ou OL), para que funcione em todos os filhos

-> Não tenha medo de explorar o grid! Se exite grid-column ou row, É PARA USAR!!!!!

-> Pode ter padding com números "qubrados", como: 33, 41, 27, 24, 32...

-> Para fazer com que um determinado elemento pare de crescer, defini uma largura maxima

-> Verificar os espaçamentos exatos ao longo do site, como por exemplo: padding, gap, margin, etc
-----------------------------------------------------------
EXEMPLO :
 <div class="termos font-2-s cor-10 container">
      <h2 class="font-1-l cor-11">1. Política e Estorno</h2>
      <p>1.1 Aceitamos cartões de crédito com as bandeiras: Visa, Mastercard, ELO e American Express. Para pagamentos à vista também aceitarmos PIX e Boleto através do PagSeguro.</p>
      <p>1.1 Aceitamos cartões de crédito com as bandeiras: Visa, Mastercard, ELO e American Express. Para pagamentos à vista também aceitarmos PIX e Boleto através do PagSeguro.</p>
      <p>1.1 Aceitamos cartões de crédito com as bandeiras: Visa, Mastercard, ELO e American Express. Para pagamentos à vista também aceitarmos PIX e Boleto através do PagSeguro.</p>
  </div>

  -> A font e cor definida na <div> servirá somente para os paragrafos, pois no h2, já tem uma font e cor definida